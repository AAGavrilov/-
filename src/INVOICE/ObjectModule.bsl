// Функция формирует табличный документ с печатной формой Инвойса(Invoice).
//
// Возвращаемое значение:
//  Табличный документ - сформированная печатная форма
//
Функция Печать() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст ="ВЫБРАТЬ
	              |	СчетНаОплатуПокупателю.Номер,
	              |	СчетНаОплатуПокупателю.Дата,
	              |	СчетНаОплатуПокупателю.Организация,
	              |	СчетНаОплатуПокупателю.ДоговорКонтрагента,
	              |	СчетНаОплатуПокупателю.Контрагент КАК Получатель,
	              |	СчетНаОплатуПокупателю.СуммаДокумента,
	              |	СчетНаОплатуПокупателю.ВалютаДокумента,
	              |	СчетНаОплатуПокупателю.УчитыватьНДС,
	              |	СчетНаОплатуПокупателю.СуммаВключаетНДС
	              |ИЗ
	              |	Документ.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
	              |ГДЕ
	              |	СчетНаОплатуПокупателю.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_INVOICE_РТУ";

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	
	ЧастьЗапросаДляВыбораСодержанияУслуг = ОбработкаТабличныхЧастей.ПолучитьЧастьЗапросаДляВыбораСодержания("СчетНаОплатуПокупателю"); 
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК Товар,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Сумма,
	|	ВложенныйЗапрос.СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.СтавкаНДС,
	|    1 КАК ID
	|ИЗ
	|	(ВЫБРАТЬ
	|		СчетНаОплатуПокупателю.Номенклатура КАК Номенклатура,
	|		СчетНаОплатуПокупателю.Номенклатура.БазоваяЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|		СчетНаОплатуПокупателю.Цена КАК Цена,
	|		СУММА(СчетНаОплатуПокупателю.Количество) КАК Количество,
	|		СУММА(СчетНаОплатуПокупателю.Сумма) КАК Сумма,
	|		СУММА(СчетНаОплатуПокупателю.СуммаНДС) КАК СуммаНДС,
	|		МИНИМУМ(СчетНаОплатуПокупателю.НомерСтроки) КАК НомерСтроки,
	|		СчетНаОплатуПокупателю.СтавкаНДС КАК СтавкаНДС
	|	ИЗ
	|		Документ.СчетНаОплатуПокупателю.Товары КАК СчетНаОплатуПокупателю
	|	
	|	ГДЕ
	|		СчетНаОплатуПокупателю.Ссылка = &ТекущийДокумент
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СчетНаОплатуПокупателю.Номенклатура,
	|		СчетНаОплатуПокупателю.Номенклатура.БазоваяЕдиницаИзмерения.Наименование,
	|		СчетНаОплатуПокупателю.Цена, СчетНаОплатуПокупателю.СтавкаНДС) КАК ВложенныйЗапрос
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + ЧастьЗапросаДляВыбораСодержанияУслуг + ",
	|	" + ЧастьЗапросаДляВыбораСодержанияУслуг + ",
	|	NULL,
	|	СчетНаОплатуПокупателю.Количество,
	|	СчетНаОплатуПокупателю.Номенклатура.БазоваяЕдиницаИзмерения.Наименование,
	|	СчетНаОплатуПокупателю.Цена,
	|	СчетНаОплатуПокупателю.Сумма,
	|	СчетНаОплатуПокупателю.СуммаНДС,
	|	СчетНаОплатуПокупателю.НомерСтроки,
	|	СчетНаОплатуПокупателю.СтавкаНДС,
	|    2
	|ИЗ
	|	Документ.СчетНаОплатуПокупателю.Услуги КАК СчетНаОплатуПокупателю
	|
	|ГДЕ
	|	СчетНаОплатуПокупателю.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|    ID,
	|	НомерСтроки";

	ЗапросТовары = Запрос.Выполнить().Выгрузить();

	Макет = ПолучитьМакет("ПФ_MXL_INVOICE");

	ДанныеПечати = Новый Структура;
	ЗначенияРеквизитовОбъекта = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
	ДанныеПечати.Вставить("ПредставлениеОрганизации", ЗначенияРеквизитовОбъекта.НаименованиеСокращенное);
	ДанныеПечати.Вставить("РеквизитыОрганизации", ФормированиеПечатныхФорм.ОписаниеОрганизации(ЗначенияРеквизитовОбъекта, "ИНН,ЮридическийАдрес,Телефоны"));
	
	СтруктурнаяЕдиница = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаОбъект, "СтруктурнаяЕдиница");
	Если ТипЗнч(СтруктурнаяЕдиница) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
		Банк = ОбщегоНазначения.ПолучитьЗначениеРеквизита(СтруктурнаяЕдиница, "Банк");
		ХарактеристикиОбъекта = ПолучитьХарактеристикиОбъекта(Банк, "SWIFTcode,НаименованиеБанка_ENG,АдресБанка_ENG,Филиал_ENG");
		Если ХарактеристикиОбъекта.Свойство("SWIFTcode") Тогда
			ДанныеПечати.Вставить("SWIFTcode", "S.W.I.F.T CODE:  " + ХарактеристикиОбъекта.SWIFTcode);
		КонецЕсли;
		Если ХарактеристикиОбъекта.Свойство("НаименованиеБанка_ENG") Тогда
			ДанныеПечати.Вставить("НаименованиеБанка_ENG", ХарактеристикиОбъекта.НаименованиеБанка_ENG);
		КонецЕсли;
		Если ХарактеристикиОбъекта.Свойство("АдресБанка_ENG") Тогда
			ДанныеПечати.Вставить("АдресБанка_ENG", ХарактеристикиОбъекта.АдресБанка_ENG);
		КонецЕсли;
		Если ХарактеристикиОбъекта.Свойство("Филиал_ENG") Тогда
			ДанныеПечати.Вставить("Филиал_ENG", "BRANCH: " + ХарактеристикиОбъекта.Филиал_ENG);
		КонецЕсли;
		
		НомерСчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница, "НомерСчета");
		НаименованиеОрганизации_ENG = рту_ЗакупкиСервер.ПолучитьЗначениеСвойства(Шапка.Организация, "Наименование на английском языке");
		ДанныеПечати.Вставить("ТекущийВалютныйСчет", СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"In favor current foreign currency account № %1 %2'", НомерСчета, НаименованиеОрганизации_ENG));
		ХарактеристикиОбъекта = ПолучитьХарактеристикиОбъекта(СтруктурнаяЕдиница, "ТранзитныйВалютныйСчет");
		Если ХарактеристикиОбъекта.Свойство("ТранзитныйВалютныйСчет") Тогда
			НомерСчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ХарактеристикиОбъекта.ТранзитныйВалютныйСчет, "НомерСчета");
			ДанныеПечати.Вставить("ТранзитныйВалютныйСчет", СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"Transit foreign currency account № %1 %2'", НомерСчета, НаименованиеОрганизации_ENG));
		КонецЕсли;
	КонецЕсли;
	
	ДанныеПечати.Вставить("ТекстЗаголовка", 	"INVOICE  № " + ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка));
	ДанныеПечати.Вставить("ТекстЗаголовкаРус", 	"СЧЕТ        № " + ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка));
	ДанныеПечати.Вставить("Date", 				" Date : " + Формат(Шапка.Дата, "ДЛФ=D") + " г. ");
	ДанныеПечати.Вставить("Дата", 				" Дата : " + Формат(Шапка.Дата, "ДЛФ=D") + " г. ");

	СведенияОПолучателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата);
	ДанныеПечати.Вставить("ПредставлениеПолучателя", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПолучателе, "ПолноеНаименование"));
	
	ОтветственныеЛица = ОбщегоНазначения.ОтветственныеЛица(Шапка.Организация, Шапка.Дата);
	Если ЗначениеЗаполнено(ОтветственныеЛица) Тогда
		ДанныеПечати.Вставить("ФИОРуководителя", ОбщегоНазначения.ИнициалыФизЛицаФамилия(ОтветственныеЛица.Руководитель)); 
		ДанныеПечати.Вставить("ДолжностьРуководителя", ОтветственныеЛица.РуководительДолжность);
		ДолжностьРуководителя_ENG = рту_ЗакупкиСервер.ПолучитьЗначениеСвойства(ОтветственныеЛица.РуководительДолжность,
			"Наименование должности на английском языке");
		Если ЗначениеЗаполнено(ДолжностьРуководителя_ENG) Тогда
			ДанныеПечати.Вставить("ДолжностьРуководителя_ENG", ДолжностьРуководителя_ENG + "/");
		КонецЕсли;
	КонецЕсли;
	
    ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСчета");
	ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
	ТабДокумент.Вывести(ОбластьМакета);
		
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
	ТабДокумент.Вывести(ОбластьМакета);

    ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	ОбластьСуммы  = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");

	ТабДокумент.Вывести(ОбластьНомера);
	ТабДокумент.Присоединить(ОбластьДанных);
	ТабДокумент.Присоединить(ОбластьСуммы);

	ОбластьКолонкаТовар = Макет.Область("Товар");

	ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Строка|Сумма");

	Сумма    = 0;
	СуммаНДС = 0;
	ВсегоСкидок    = 0;
	ВсегоБезСкидок = 0;

	Для Каждого ВыборкаСтрокТовары Из ЗапросТовары Цикл 

		ОбластьНомера.Параметры.НомерСтроки = ЗапросТовары.Индекс(ВыборкаСтрокТовары) + 1;
		ТабДокумент.Вывести(ОбластьНомера);

		ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьДанных.Параметры.Товар       = СокрЛП(ВыборкаСтрокТовары.Товар);
		
		Если ВыборкаСтрокТовары.СуммаНДС <> 0 Тогда
				ОбластьДанных.Параметры.СуммаНДС = ВыборкаСтрокТовары.СуммаНДС;
			ИначеЕсли ВыборкаСтрокТовары.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС  Тогда
				ОбластьДанных.Параметры.СуммаНДС = "Без НДС      Without VAT";
			Иначе
				ОбластьДанных.Параметры.СуммаНДС = "0 %";
		КонецЕсли;
				
		ТабДокумент.Присоединить(ОбластьДанных);
		ОбластьСуммы.Параметры.Заполнить(ВыборкаСтрокТовары);
		ТабДокумент.Присоединить(ОбластьСуммы);
		
		Сумма = Сумма + ВыборкаСтрокТовары.Сумма;
		СуммаНДС = СуммаНДС + ВыборкаСтрокТовары.СуммаНДС;

	КонецЦикла;

	ДанныеПечати.Вставить("Всего", ОбщегоНазначения.ФорматСумм(Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС)));
	СуммаКПрописи = Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС);
	ДанныеПечати.Вставить("СуммаПрописью", 		ОбщегоНазначения.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаДокумента));
    ДанныеПечати.Вставить("СуммаПрописьюВал", 	ЧислоПрописью(СуммаКПрописи, "L=en_US","USD, USD, Cent, Cent, 2"));
	
	// Вывести Итого
	ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Итого|Сумма");
	ЗаполнитьЗначенияСвойств(ОбластьСуммы.Параметры, ДанныеПечати);
	
	ТабДокумент.Вывести(ОбластьНомера);
	ТабДокумент.Присоединить(ОбластьДанных);
	ТабДокумент.Присоединить(ОбластьСуммы);
	
	// Вывести Сумму прописью
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	// Вывести подписи
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСчета");
	ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры,ДанныеПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

КонецФункции // ПечатьСчетаЗаказа()

Функция ПолучитьХарактеристикиОбъекта(ОбъектСистемы, НаименованиеХарактеристик)

	Результат = Новый Структура();
	
	МассивРеквизитов = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(НаименованиеХарактеристик);
	
	Запрос = Новый Запрос; 
	Запрос.Текст ="ВЫБРАТЬ
	              |	Характеристики.ВидХарактеристики.Наименование КАК ВидХарактеристики,
	              |	Характеристики.Значение
	              |ИЗ
	              |	РегистрСведений.УГМКХарактеристики КАК Характеристики
	              |ГДЕ
	              |	Характеристики.ОбъектСистемы = &ОбъектСистемы
	              |	И Характеристики.ВидХарактеристики.Наименование В(&МассивРеквизитов)";		
	
	Запрос.УстановитьПараметр("ОбъектСистемы",ОбъектСистемы);
	Запрос.УстановитьПараметр("МассивРеквизитов", МассивРеквизитов);
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	Пока Выборка.Следующий() Цикл 
		Результат.Вставить(Выборка.ВидХарактеристики,Выборка.Значение);
	КонецЦикла;
		
	Возврат Результат;
	
КонецФункции // ПолучитьХарактеристикиОбъекта()
